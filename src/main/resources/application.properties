spring.application.name=finalproject

server.port=8080
#ViewResolver
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#MySql DataSource
spring.datasource.username: test
spring.datasource.password: test
# spring.datasource.url: jdbc:mysql://192.168.0.55:3306/projectdb?&serverTimezone=UTC&autoReconnect=true&allowMultiQueries=true&characterEncoding=UTF-8
spring.datasource.url: jdbc:mysql://localhost:3306/projectdb?&serverTimezone=UTC&autoReconnect=true&allowMultiQueries=true&characterEncoding=UTF-8
spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
#serverTimezone : 서버가 돌아가는 시간대

#선택사항
#Mapper Camel & Snake표기법 지원여부
# ex) my_time 변수명이 있을 때 myTime 이렇게 하는 지원 하겠냐?
mybatis.configuration.map-underscore-to-camel-case=false

#선택사항2
#Model Location
# 기본 모델은 어디에 두겠냐?
# 이게 있어야 vo에 @Alias("dept") 가능
mybatis.type-aliases-package=com.ict.finalproject.vo

#mapper위치는 어디에 두겠냐?
#Xml Location
# classpath = root 경로 =java/mappers/*.xml에 두겠다!
# 톰캣 배포시 resources 밑에 둬야 돌아감
mybatis.mapper-locations=classpath:mappers/*.xml

# 최대 파일 크기 (예: 100MB)
spring.servlet.multipart.max-file-size=100MB
# 최대 요청 크기 (예: 200MB)
spring.servlet.multipart.max-request-size=200MB

# 메일 발송
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=camprover1@gmail.com
spring.mail.password=htgaxiqsroxmzmno
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true
# Mail Settings
spring.mail.default-encoding=UTF-8

# toss 결제 
# toss.api-key=your_toss_api_key_here
# toss.api-url=https://api.tosspayments.com/v1

# Naver
# spring.security.oauth2.client.registration.naver.client-id=클라이언트ID
# spring.security.oauth2.client.registration.naver.client-secret=클라이언트Secret

# # Naver Spring Security 수동 입력
# # == http://localhost:8080/login/oauth2/code/naver
# spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.naver.scope=name,email,nickname
# spring.security.oauth2.client.registration.naver.client-name=Naver 

# # provider
# spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

# # Security의 기준이 되는 username의 이름을 네이버에서는 response로 (회원 조회시 반환되는 JSON 형태 때문)
# spring.security.oauth2.client.provider.naver.user-name-attribute=response
