@startuml
user -> views: 로그인 요청
views -> controller :kakao_login.do
activate controller
participant "Kakao API Server" as kakaoServer order 20
autoactivate on
controller -> kakaoServer :oauth/authorize
kakaoServer --> controller : return code
controller -> service: kakao_get_token(code)
service -> util : kakao_get_token(String code)
util -> kakaoServer: kakao_get_token(String code)
kakaoServer --> util: return access_token
deactivate kakaoServer
util -> service: Response {access_token}
service --> controller : return json

alt 성공적인 토큰 수신
    controller -> service : kakao_get_info(access_token)
    service -> kakaoServer : GET /v2/user/me (access_token)
    kakaoServer --> service : Response {user_info}
    deactivate kakaoServer
    service --> controller : return user_info
    DATABASE database
end
alt
alt 사용자 정보 수신 성공
        controller -> service : selectOneKakaoId(kakaoId)
        service -> database : selectOneKakaoId(kakaoId)
        database --> service : result MemberVo or null
        service --> controller : return MemberVo or null
        
        alt 신규 회원
            controller -> views : redirect join_agree.do
            activate views
            views --> user : 회원가입 동의 페이지
        else 기존 회원
            controller -> session : Set user info

            controller --> views : redirect main.do
            activate views
            views --> user : 메인 페이지
        end
else 사용자 정보 수신 실패
        controller --> views : redirect login_main.do
        views --> user : 로그인 페이지        
end        
@enduml


            ; session -> controller : session.setAttribute("user", vo)